/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var t={63:t=>{t.exports=function t(e,r){if(e===r)return!0;if(e&&r&&"object"==typeof e&&"object"==typeof r){if(e.constructor!==r.constructor)return!1;var n,s,o;if(Array.isArray(e)){if((n=e.length)!=r.length)return!1;for(s=n;0!=s--;)if(!t(e[s],r[s]))return!1;return!0}if(e.constructor===RegExp)return e.source===r.source&&e.flags===r.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===r.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===r.toString();if((n=(o=Object.keys(e)).length)!==Object.keys(r).length)return!1;for(s=n;0!=s--;)if(!Object.prototype.hasOwnProperty.call(r,o[s]))return!1;for(s=n;0!=s--;){var i=o[s];if(!t(e[i],r[i]))return!1}return!0}return e!=e&&r!=r}}},e={};function r(n){var s=e[n];if(void 0!==s)return s.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{function t(r,n,s,o,i,a){if(i-o<=s)return;const l=o+i>>1;e(r,n,l,o,i,a%2),t(r,n,s,o,l-1,a+1),t(r,n,s,l+1,i,a+1)}function e(t,r,s,o,i,a){for(;i>o;){if(i-o>600){const n=i-o+1,l=s-o+1,c=Math.log(n),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(n-u)/n)*(l-n/2<0?-1:1);e(t,r,s,Math.max(o,Math.floor(s-l*u/n+h)),Math.min(i,Math.floor(s+(n-l)*u/n+h)),a)}const l=r[2*s+a];let c=o,u=i;for(n(t,r,o,s),r[2*i+a]>l&&n(t,r,o,i);c<u;){for(n(t,r,c,u),c++,u--;r[2*c+a]<l;)c++;for(;r[2*u+a]>l;)u--}r[2*o+a]===l?n(t,r,o,u):(u++,n(t,r,u,i)),u<=s&&(o=u+1),s<=u&&(i=u-1)}}function n(t,e,r,n){s(t,r,n),s(e,2*r,2*n),s(e,2*r+1,2*n+1)}function s(t,e,r){const n=t[e];t[e]=t[r],t[r]=n}function o(t,e,r,n){const s=t-r,o=e-n;return s*s+o*o}const i=t=>t[0],a=t=>t[1];class l{constructor(e,r=i,n=a,s=64,o=Float64Array){this.nodeSize=s,this.points=e;const l=e.length<65536?Uint16Array:Uint32Array,c=this.ids=new l(e.length),u=this.coords=new o(2*e.length);for(let t=0;t<e.length;t++)c[t]=t,u[2*t]=r(e[t]),u[2*t+1]=n(e[t]);t(c,u,s,0,c.length-1,0)}range(t,e,r,n){return function(t,e,r,n,s,o,i){const a=[0,t.length-1,0],l=[];let c,u;for(;a.length;){const h=a.pop(),p=a.pop(),m=a.pop();if(p-m<=i){for(let i=m;i<=p;i++)c=e[2*i],u=e[2*i+1],c>=r&&c<=s&&u>=n&&u<=o&&l.push(t[i]);continue}const g=Math.floor((m+p)/2);c=e[2*g],u=e[2*g+1],c>=r&&c<=s&&u>=n&&u<=o&&l.push(t[g]);const d=(h+1)%2;(0===h?r<=c:n<=u)&&(a.push(m),a.push(g-1),a.push(d)),(0===h?s>=c:o>=u)&&(a.push(g+1),a.push(p),a.push(d))}return l}(this.ids,this.coords,t,e,r,n,this.nodeSize)}within(t,e,r){return function(t,e,r,n,s,i){const a=[0,t.length-1,0],l=[],c=s*s;for(;a.length;){const u=a.pop(),h=a.pop(),p=a.pop();if(h-p<=i){for(let s=p;s<=h;s++)o(e[2*s],e[2*s+1],r,n)<=c&&l.push(t[s]);continue}const m=Math.floor((p+h)/2),g=e[2*m],d=e[2*m+1];o(g,d,r,n)<=c&&l.push(t[m]);const f=(u+1)%2;(0===u?r-s<=g:n-s<=d)&&(a.push(p),a.push(m-1),a.push(f)),(0===u?r+s>=g:n+s>=d)&&(a.push(m+1),a.push(h),a.push(f))}return l}(this.ids,this.coords,t,e,r,this.nodeSize)}}const c={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:!1,generateId:!1,reduce:null,map:t=>t},u=Math.fround||(h=new Float32Array(1),t=>(h[0]=+t,h[0]));var h;class p{constructor(t){this.options=M(Object.create(c),t),this.trees=new Array(this.options.maxZoom+1)}load(t){const{log:e,minZoom:r,maxZoom:n,nodeSize:s}=this.options;e&&console.time("total time");const o=`prepare ${t.length} points`;e&&console.time(o),this.points=t;let i=[];for(let e=0;e<t.length;e++)t[e].geometry&&i.push(g(t[e],e));this.trees[n+1]=new l(i,v,w,s,Float32Array),e&&console.timeEnd(o);for(let t=n;t>=r;t--){const r=+Date.now();i=this._cluster(i,t),this.trees[t]=new l(i,v,w,s,Float32Array),e&&console.log("z%d: %d clusters in %dms",t,i.length,+Date.now()-r)}return e&&console.timeEnd("total time"),this}getClusters(t,e){let r=((t[0]+180)%360+360)%360-180;const n=Math.max(-90,Math.min(90,t[1]));let s=180===t[2]?180:((t[2]+180)%360+360)%360-180;const o=Math.max(-90,Math.min(90,t[3]));if(t[2]-t[0]>=360)r=-180,s=180;else if(r>s){const t=this.getClusters([r,n,180,o],e),i=this.getClusters([-180,n,s,o],e);return t.concat(i)}const i=this.trees[this._limitZoom(e)],a=i.range(k(r),x(o),k(s),x(n)),l=[];for(const t of a){const e=i.points[t];l.push(e.numPoints?d(e):this.points[e.index])}return l}getChildren(t){const e=this._getOriginId(t),r=this._getOriginZoom(t),n="No cluster with the specified id.",s=this.trees[r];if(!s)throw new Error(n);const o=s.points[e];if(!o)throw new Error(n);const i=this.options.radius/(this.options.extent*Math.pow(2,r-1)),a=s.within(o.x,o.y,i),l=[];for(const e of a){const r=s.points[e];r.parentId===t&&l.push(r.numPoints?d(r):this.points[r.index])}if(0===l.length)throw new Error(n);return l}getLeaves(t,e,r){e=e||10,r=r||0;const n=[];return this._appendLeaves(n,t,e,r,0),n}getTile(t,e,r){const n=this.trees[this._limitZoom(t)],s=Math.pow(2,t),{extent:o,radius:i}=this.options,a=i/o,l=(r-a)/s,c=(r+1+a)/s,u={features:[]};return this._addTileFeatures(n.range((e-a)/s,l,(e+1+a)/s,c),n.points,e,r,s,u),0===e&&this._addTileFeatures(n.range(1-a/s,l,1,c),n.points,s,r,s,u),e===s-1&&this._addTileFeatures(n.range(0,l,a/s,c),n.points,-1,r,s,u),u.features.length?u:null}getClusterExpansionZoom(t){let e=this._getOriginZoom(t)-1;for(;e<=this.options.maxZoom;){const r=this.getChildren(t);if(e++,1!==r.length)break;t=r[0].properties.cluster_id}return e}_appendLeaves(t,e,r,n,s){const o=this.getChildren(e);for(const e of o){const o=e.properties;if(o&&o.cluster?s+o.point_count<=n?s+=o.point_count:s=this._appendLeaves(t,o.cluster_id,r,n,s):s<n?s++:t.push(e),t.length===r)break}return s}_addTileFeatures(t,e,r,n,s,o){for(const i of t){const t=e[i],a=t.numPoints;let l,c,u;if(a)l=f(t),c=t.x,u=t.y;else{const e=this.points[t.index];l=e.properties,c=k(e.geometry.coordinates[0]),u=x(e.geometry.coordinates[1])}const h={type:1,geometry:[[Math.round(this.options.extent*(c*s-r)),Math.round(this.options.extent*(u*s-n))]],tags:l};let p;a?p=t.id:this.options.generateId?p=t.index:this.points[t.index].id&&(p=this.points[t.index].id),void 0!==p&&(h.id=p),o.features.push(h)}}_limitZoom(t){return Math.max(this.options.minZoom,Math.min(Math.floor(+t),this.options.maxZoom+1))}_cluster(t,e){const r=[],{radius:n,extent:s,reduce:o,minPoints:i}=this.options,a=n/(s*Math.pow(2,e));for(let n=0;n<t.length;n++){const s=t[n];if(s.zoom<=e)continue;s.zoom=e;const l=this.trees[e+1],c=l.within(s.x,s.y,a),u=s.numPoints||1;let h=u;for(const t of c){const r=l.points[t];r.zoom>e&&(h+=r.numPoints||1)}if(h>u&&h>=i){let t=s.x*u,i=s.y*u,a=o&&u>1?this._map(s,!0):null;const p=(n<<5)+(e+1)+this.points.length;for(const r of c){const n=l.points[r];if(n.zoom<=e)continue;n.zoom=e;const c=n.numPoints||1;t+=n.x*c,i+=n.y*c,n.parentId=p,o&&(a||(a=this._map(s,!0)),o(a,this._map(n)))}s.parentId=p,r.push(m(t/h,i/h,p,h,a))}else if(r.push(s),h>1)for(const t of c){const n=l.points[t];n.zoom<=e||(n.zoom=e,r.push(n))}}return r}_getOriginId(t){return t-this.points.length>>5}_getOriginZoom(t){return(t-this.points.length)%32}_map(t,e){if(t.numPoints)return e?M({},t.properties):t.properties;const r=this.points[t.index].properties,n=this.options.map(r);return e&&n===r?M({},n):n}}function m(t,e,r,n,s){return{x:u(t),y:u(e),zoom:1/0,id:r,parentId:-1,numPoints:n,properties:s}}function g(t,e){const[r,n]=t.geometry.coordinates;return{x:u(k(r)),y:u(x(n)),zoom:1/0,index:e,parentId:-1}}function d(t){return{type:"Feature",id:t.id,properties:f(t),geometry:{type:"Point",coordinates:[(e=t.x,360*(e-.5)),y(t.y)]}};var e}function f(t){const e=t.numPoints,r=e>=1e4?`${Math.round(e/1e3)}k`:e>=1e3?Math.round(e/100)/10+"k":e;return M(M({},t.properties),{cluster:!0,cluster_id:t.id,point_count:e,point_count_abbreviated:r})}function k(t){return t/360+.5}function x(t){const e=Math.sin(t*Math.PI/180),r=.5-.25*Math.log((1+e)/(1-e))/Math.PI;return r<0?0:r>1?1:r}function y(t){const e=(180-360*t)*Math.PI/180;return 360*Math.atan(Math.exp(e))/Math.PI-90}function M(t,e){for(const r in e)t[r]=e[r];return t}function v(t){return t.x}function w(t){return t.y}var _=r(63),b=r.n(_);class C{constructor({markers:t,position:e}){this.markers=t,e&&(e instanceof google.maps.LatLng?this._position=e:this._position=new google.maps.LatLng(e))}get bounds(){if(0!==this.markers.length||this._position)return this.markers.reduce(((t,e)=>t.extend(e.getPosition())),new google.maps.LatLngBounds(this._position,this._position))}get position(){return this._position||this.bounds.getCenter()}get count(){return this.markers.filter((t=>t.getVisible())).length}push(t){this.markers.push(t)}delete(){this.marker&&(this.marker.setMap(null),delete this.marker),this.markers.length=0}}const L=t=>t.map((t=>new C({position:t.getPosition(),markers:[t]})));class P extends class{constructor({maxZoom:t=16}){this.maxZoom=t}noop({markers:t}){return L(t)}}{constructor(t){var{maxZoom:e,radius:r=60}=t,n=function(t,e){var r={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.indexOf(n)<0&&(r[n]=t[n]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(n=Object.getOwnPropertySymbols(t);s<n.length;s++)e.indexOf(n[s])<0&&Object.prototype.propertyIsEnumerable.call(t,n[s])&&(r[n[s]]=t[n[s]])}return r}(t,["maxZoom","radius"]);super({maxZoom:e}),this.superCluster=new p(Object.assign({maxZoom:this.maxZoom,radius:r},n)),this.state={zoom:null}}calculate(t){let e=!1;if(!b()(t.markers,this.markers)){e=!0,this.markers=[...t.markers];const r=this.markers.map((t=>({type:"Feature",geometry:{type:"Point",coordinates:[t.getPosition().lng(),t.getPosition().lat()]},properties:{marker:t}})));this.superCluster.load(r)}const r={zoom:t.map.getZoom()};return e||this.state.zoom>this.maxZoom&&r.zoom>this.maxZoom||(e=e||!b()(this.state,r)),this.state=r,e&&(this.clusters=this.cluster(t)),{clusters:this.clusters,changed:e}}cluster({map:t}){return this.superCluster.getClusters([-180,-90,180,90],Math.round(t.getZoom())).map(this.transformCluster.bind(this))}transformCluster({geometry:{coordinates:[t,e]},properties:r}){if(r.cluster)return new C({markers:this.superCluster.getLeaves(r.cluster_id,1/0).map((t=>t.properties.marker)),position:new google.maps.LatLng({lat:e,lng:t})});{const t=r.marker;return new C({markers:[t],position:t.getPosition()})}}}class O{constructor(t,e){this.markers={sum:t.length};const r=e.map((t=>t.count)),n=r.reduce(((t,e)=>t+e),0);this.clusters={count:e.length,markers:{mean:n/e.length,sum:n,min:Math.min(...r),max:Math.max(...r)}}}}class I{render({count:t,position:e},r){const n=t>Math.max(10,r.clusters.markers.mean)?"#ff0000":"#0000ff",s=window.btoa(`\n  <svg fill="${n}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240">\n    <circle cx="120" cy="120" opacity=".6" r="70" />\n    <circle cx="120" cy="120" opacity=".3" r="90" />\n    <circle cx="120" cy="120" opacity=".2" r="110" />\n  </svg>`);return new google.maps.Marker({position:e,icon:{url:`data:image/svg+xml;base64,${s}`,scaledSize:new google.maps.Size(45,45)},label:{text:String(t),color:"rgba(255,255,255,0.9)",fontSize:"12px"},title:`Cluster of ${t} markers`,zIndex:Number(google.maps.Marker.MAX_ZINDEX)+t})}}class E{constructor(){!function(t,e){for(let r in e.prototype)t.prototype[r]=e.prototype[r]}(E,google.maps.OverlayView)}}var Z;!function(t){t.CLUSTERING_BEGIN="clusteringbegin",t.CLUSTERING_END="clusteringend",t.CLUSTER_CLICK="click"}(Z||(Z={}));const S=(t,e,r)=>{r.fitBounds(e.bounds)};class z extends E{constructor({map:t,markers:e=[],algorithm:r=new P({}),renderer:n=new I,onClusterClick:s=S}){super(),this.markers=[...e],this.clusters=[],this.algorithm=r,this.renderer=n,this.onClusterClick=s,t&&this.setMap(t)}addMarker(t,e){this.markers.includes(t)||(this.markers.push(t),e||this.render())}addMarkers(t,e){t.forEach((t=>{this.addMarker(t,!0)})),e||this.render()}removeMarker(t,e){const r=this.markers.indexOf(t);return-1!==r&&(t.setMap(null),this.markers.splice(r,1),e||this.render(),!0)}removeMarkers(t,e){let r=!1;return t.forEach((t=>{r=this.removeMarker(t,!0)||r})),r&&!e&&this.render(),r}clearMarkers(t){this.markers.length=0,t||this.render()}render(){const t=this.getMap();if(t instanceof google.maps.Map&&this.getProjection()){google.maps.event.trigger(this,Z.CLUSTERING_BEGIN,this);const{clusters:e,changed:r}=this.algorithm.calculate({markers:this.markers,map:t,mapCanvasProjection:this.getProjection()});(r||null==r)&&(this.reset(),this.clusters=e,this.renderClusters()),google.maps.event.trigger(this,Z.CLUSTERING_END,this)}}onAdd(){this.idleListener=this.getMap().addListener("idle",this.render.bind(this)),this.render()}onRemove(){google.maps.event.removeListener(this.idleListener),this.reset()}reset(){this.markers.forEach((t=>t.setMap(null))),this.clusters.forEach((t=>t.delete())),this.clusters=[]}renderClusters(){const t=new O(this.markers,this.clusters),e=this.getMap();this.clusters.forEach((r=>{1===r.markers.length?r.marker=r.markers[0]:(r.marker=this.renderer.render(r,t),this.onClusterClick&&r.marker.addListener("click",(t=>{google.maps.event.trigger(this,Z.CLUSTER_CLICK,r),this.onClusterClick(t,r,e)}))),r.marker.setMap(e)}))}}var j=document.querySelector(".site-list__item--open"),A=document.querySelector(".menu-list");j.addEventListener("click",(function(){A.classList.toggle("menu-list--opened"),A.classList.contains("menu-list--opened")?j.classList.add("reverse-arrow"):j.classList.remove("reverse-arrow")}));var N=document.querySelector(".video__mute-btn");N.addEventListener("click",(function(){N.classList.toggle("video__unmute-btn");var t=document.querySelector(".video__video");!1===t.muted?t.muted=!0:t.muted=!1}));var T=[{lat:59.296653,lng:18.088269},{lat:59.299912,lng:18.081853},{lat:59.301315,lng:18.085391},{lat:61.983811,lng:17.058164},{lat:61.983245,lng:17.051153},{lat:61.773241,lng:9.538958},{lat:61.773341,lng:9.538951},{lat:61.772211,lng:9.538723},{lat:61.769901,lng:9.538321},{lat:60.391263,lng:5.322054},{lat:60.392222,lng:5.322222},{lat:57.708873,lng:11.974567},{lat:57.449403,lng:11.746245},{lat:60.451813,lng:22.266663},{lat:60.452222,lng:22.262222},{lat:60.456321,lng:22.299122},{lat:60.459174,lng:22.294122},{lat:60.459921,lng:22.200122},{lat:61.054993,lng:28.189663},{lat:61.052112,lng:28.188411},{lat:61.051122,lng:28.181122},{lat:56.361534,lng:8.621727},{lat:56.321403,lng:8.746245},{lat:55.067434,lng:10.607282},{lat:55.061122,lng:10.601122},{lat:53.201233,lng:5.799913},{lat:53.201122,lng:5.791122},{lat:53.206211,lng:5.799999},{lat:53.200644,lng:5.799432},{lat:53.207733,lng:5.791234},{lat:52.657765,lng:17.955693},{lat:52.651122,lng:17.951122},{lat:63.979229,lng:-16.891334},{lat:63.971122,lng:-16.891122},{lat:63.837781,lng:-21.059457},{lat:63.831122,lng:-21.051122},{lat:63.834444,lng:-21.044444},{lat:64.449403,lng:-18.746245},{lat:64.223224,lng:-18.112221}];window.initMap=function(){var t=new google.maps.Map(document.getElementById("map"),{mapId:"8a37e2e553c0961b",zoom:5,center:{lat:58.466308,lng:9.125055},disableDefaultUI:!0}),e=new google.maps.InfoWindow({content:"",disableAutoPan:!0}),r="ABCDEFGHIJKLMNOPQRSTUVWXYZ",n=T.map((function(n,s){var o=r[s%r.length],i=new google.maps.Marker({position:n,label:o});return i.addListener("click",(function(){e.setContent(o),e.open(t,i)})),i}));new z({markers:n,map:t})}})()})();
//# sourceMappingURL=main.js.map